Smell,Primary Service / Module,Detected?,Code File Path (if applicable),Code Line(s),Labeling justification in details
Insufficient Modularization,product-service,No,"services/product/src/main/java/com/elsebaey/ecommerce/product/ProductController.java; services/product/src/main/java/com/elsebaey/ecommerce/product/ProductService.java; services/product/src/main/java/com/elsebaey/ecommerce/product/ProductRepository.java","ProductController:L1-L44; ProductService:L1-L66; ProductRepository:L1-L9","The product module only exposes catalog CRUD and inventory reservation over `/api/v1/products`, and all logic delegates to a single repository without bundling unrelated subdomains, so no insufficient modularization smell appears."
Greedy Service,customer-service,No,"services/customer/src/main/java/com/elsebaey/ecommerce/customer/CustomerController.java; services/customer/src/main/java/com/elsebaey/ecommerce/customer/CustomerService.java","CustomerController:L1-L52; CustomerService:L1-L65","Customer endpoints and services only handle MongoDB-backed CRUD and field merges; there is no orchestration of external workflows, so the greedy-service smell is absent."
Greedy Service,notification-service,Yes,"services/notification/src/main/java/com/elsebaey/ecommerce/kafka/NotificationConsumer.java; services/notification/src/main/java/com/elsebaey/ecommerce/email/EmailService.java","NotificationConsumer:L1-L66; EmailService:L1-L100","NotificationConsumer ingests payment and order topics, persists notifications, and triggers EmailService SMTP delivery, concentrating messaging, persistence, and email sending in one service."
Greedy Service,order-service,Yes,"services/order/src/main/java/com/elsebaey/ecommerce/order/OrderService.java","OrderService:L1-L83","OrderService orchestrates customer lookups, product reservations, order persistence, order-line creation, payment capture, and Kafka confirmations inside one transaction script, satisfying the greedy-service smell."
Greedy Service,payment-service,Yes,"services/payment/src/main/java/com/elsebaey/ecommerce/payment/PaymentService.java; services/payment/src/main/java/com/elsebaey/ecommerce/notification/NotificationProducer.java","PaymentService:L1-L27; NotificationProducer:L1-L24","PaymentService persists payments while also assembling cross-context notification payloads and sending them via NotificationProducer, so payment and notification orchestration are coupled in the same module."
Greedy Service,product-service,No,"services/product/src/main/java/com/elsebaey/ecommerce/product/ProductService.java","ProductService:L1-L66","ProductService only wraps repository operations and DTO mapping for products and inventory; it never calls other services or orchestrates separate concerns, so the greedy-service smell does not manifest."
Unversioned API,api-gateway,No,"services/config-server/src/main/resources/configurations/gateway-service.yml","gateway-service.yml:L1-L28","All configured Spring Cloud Gateway routes are versioned under `/api/v1/...`, preventing the unversioned-API smell."
ESB Usage,api-gateway,No,"services/gateway/src/main/java/com/elsebaey/gateway/GatewayApplication.java; services/gateway/src/main/java/com/elsebaey/gateway/security/SecurityConfig.java; services/config-server/src/main/resources/configurations/gateway-service.yml","GatewayApplication:L1-L11; SecurityConfig:L1-L24; gateway-service.yml:L1-L28","The gateway module only starts HTTP routing with security filters and static routes, with no message transformation or asynchronous bus mediation, so ESB usage is not detected."
Broken Modularization,product-service,No,"services/product/src/main/java/com/elsebaey/ecommerce/product/ProductService.java; services/product/pom.xml","ProductService:L1-L66; pom.xml:L1-L133","ProductService stays within catalog persistence, and the Maven descriptor pulls only Spring/JPA dependencies, showing no foreign bounded-context code embedded in the product moduleâ€”hence no broken modularization."
Cyclic Dependency,customer-service,No,"services/customer/src/main/java/com/elsebaey/ecommerce/customer/Customer.java; services/customer/src/main/java/com/elsebaey/ecommerce/customer/Address.java","Customer:L1-L20; Address:L1-L17","Customer holds Address as a value object without any reverse reference from Address back to Customer, so the package remains acyclic."
Cyclic Dependency,order-service,Yes,"services/order/src/main/java/com/elsebaey/ecommerce/order/Order.java; services/order/src/main/java/com/elsebaey/ecommerce/orderline/OrderLine.java","Order:L1-L40; OrderLine:L1-L24","Order keeps a collection of OrderLine entities mapped by `order`, and each OrderLine has a `ManyToOne` back to Order, creating a bidirectional dependency cycle."
Cyclic Dependency,payment-service,Yes,"services/payment/src/main/java/com/elsebaey/ecommerce/payment/PaymentService.java; services/payment/src/main/java/com/elsebaey/ecommerce/notification/NotificationProducer.java; services/payment/src/main/java/com/elsebaey/ecommerce/notification/PaymentNotificationRequest.java; services/payment/src/main/java/com/elsebaey/ecommerce/payment/PaymentMethod.java","PaymentService:L1-L30; NotificationProducer:L1-L24; PaymentNotificationRequest:L1-L15; PaymentMethod:L1-L9","PaymentService depends on the in-module notification helpers to emit Kafka events, and PaymentNotificationRequest inside that package imports the PaymentMethod enum, so the payment and notification packages reference each other and form a compile-time cycle."
Cyclic Dependency,product-service,Yes,"services/product/src/main/java/com/elsebaey/ecommerce/product/Product.java; services/product/src/main/java/com/elsebaey/ecommerce/category/Category.java","Product:L1-L28; Category:L1-L24","Product references Category via `@ManyToOne`, while Category exposes a `List<Product>` collection with `@OneToMany`, forming a mutual dependency inside the module."
