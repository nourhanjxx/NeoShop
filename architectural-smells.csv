Smell,Primary Service / Module,Detected?,Code File Path (if applicable),Code Line(s),Labeling justification in details
Insufficient Modularization,order-service,Yes,"services/order/src/main/java/com/elsebaey/ecommerce/order/OrderController.java; services/order/src/main/java/com/elsebaey/ecommerce/orderline/OrderLineController.java; services/order/src/main/java/com/elsebaey/ecommerce/orderline/OrderLineService.java","OrderController:L11-L32; OrderLineController:L12-L21; OrderLineService:L8-L25","Order creation and order-line lookup APIs, along with the corresponding persistence service, all live inside the order service, so cart line management is embedded instead of isolated in a dedicated module."
Insufficient Modularization,product-service,No,"services/product/src/main/java/com/elsebaey/ecommerce/product/ProductController.java; services/product/src/main/java/com/elsebaey/ecommerce/product/ProductService.java","ProductController:L11-L40; ProductService:L12-L65","The product service only exposes product catalog CRUD and stock adjustment logic; there is no extra module (such as cart or pricing) being hosted here, so the smell is not present."
Unstable Dependency,order-service,Yes,"services/order/src/main/java/com/elsebaey/ecommerce/order/OrderService.java; services/order/src/main/java/com/elsebaey/ecommerce/customer/CustomerClient.java; services/order/src/main/java/com/elsebaey/ecommerce/product/ProductClient.java; services/order/src/main/java/com/elsebaey/ecommerce/payment/PaymentClient.java","OrderService:L23-L69; CustomerClient:L9-L16; ProductClient:L19-L45; PaymentClient:L7-L15","`OrderService.createOrder` synchronously depends on customer, product, and payment services using Feign/RestTemplate without fallbacks, so instability in any downstream API breaks the workflow."
Greedy Service,order-service,Yes,"services/order/src/main/java/com/elsebaey/ecommerce/order/OrderService.java","OrderService:L23-L69","The order service orchestrates customer validation, product reservation, order persistence, order-line creation, payment requests, and Kafka confirmations in one class instead of delegating to specialized components."
Greedy Service,payment-service,Yes,"services/payment/src/main/java/com/elsebaey/ecommerce/payment/PaymentService.java; services/payment/src/main/java/com/elsebaey/ecommerce/notification/NotificationProducer.java","PaymentService:L12-L29; NotificationProducer:L16-L25","Payment handling persists transactions and also constructs cross-context notification payloads before pushing them onto Kafka, coupling payment logic with notification orchestration."
Greedy Service,notification-service,Yes,"services/notification/src/main/java/com/elsebaey/ecommerce/kafka/NotificationConsumer.java; services/notification/src/main/java/com/elsebaey/ecommerce/email/EmailService.java","NotificationConsumer:L24-L64; EmailService:L1-L100","The notification consumer consumes payment and order topics, persists notification records, and directly calls the SMTP-oriented `EmailService`, centralizing multiple steps across bounded contexts in one service."
Greedy Service,customer-service,No,"services/customer/src/main/java/com/elsebaey/ecommerce/customer/CustomerService.java","CustomerService:L14-L65","CustomerService only brokers simple CRUD against MongoDB without orchestrating other bounded contexts, so the greedy-service smell is absent."
Greedy Service,product-service,No,"services/product/src/main/java/com/elsebaey/ecommerce/product/ProductService.java","ProductService:L16-L65","ProductService performs catalog persistence and stock updates without invoking external services or workflows, so it does not qualify as a greedy service."
Hub-like Services,order-service,Yes,"services/order/src/main/java/com/elsebaey/ecommerce/order/OrderService.java; services/order/src/main/java/com/elsebaey/ecommerce/kafka/OrderProducer.java; services/order/src/main/java/com/elsebaey/ecommerce/customer/CustomerClient.java; services/order/src/main/java/com/elsebaey/ecommerce/product/ProductClient.java; services/order/src/main/java/com/elsebaey/ecommerce/payment/PaymentClient.java","OrderService:L23-L69; OrderProducer:L11-L27; CustomerClient:L9-L16; ProductClient:L19-L45; PaymentClient:L7-L15","The order service coordinates synchronous calls to customer, product, and payment services and then publishes Kafka events, concentrating communication responsibilities in a single hub."
Shared Persistency,"order-service, product-service, payment-service",Yes,"services/config-server/src/main/resources/configurations/order-service.yml; services/config-server/src/main/resources/configurations/product-service.yml; services/config-server/src/main/resources/configurations/payment-service.yml","order-service.yml:L1-L26; product-service.yml:L1-L22; payment-service.yml:L1-L27","All three services target the same Postgres instance (`localhost:5432`) with shared credentials, leaving their persistence tier coupled at the infrastructure level despite separate schemas."
Broken Modularization,payment-service,Yes,"services/payment/src/main/java/com/elsebaey/ecommerce/payment/PaymentService.java; services/payment/src/main/java/com/elsebaey/ecommerce/notification/NotificationProducer.java; services/payment/src/main/java/com/elsebaey/ecommerce/notification/PaymentNotificationRequest.java; services/notification/src/main/java/com/elsebaey/ecommerce/kafka/NotificationConsumer.java","PaymentService:L12-L29; NotificationProducer:L16-L25; PaymentNotificationRequest:L1-L13; NotificationConsumer:L24-L64","Payment service classes embed notification-domain producers and payloads, while the notification service separately consumes the same topics, scattering notification responsibilities across modules."
Broken Modularization,product-service,No,"services/product/src/main/java/com/elsebaey/ecommerce/product/ProductService.java; services/product/pom.xml","ProductService:L16-L65; pom.xml:L33-L101","The product module only depends on catalog-specific components and Spring infrastructure; it does not pull in foreign bounded-context code, so broken modularization is not observed."
Unnecessary Abstraction,order-service,Yes,"services/order/src/main/java/com/elsebaey/ecommerce/product/ProductClient.java","ProductClient:L1-L45","A hand-written RestTemplate wrapper re-implements the downstream `/purchase` call even though the project otherwise uses Feign clients, introducing an extra abstraction layer."
Cyclic Dependency,product-service,Yes,"services/product/src/main/java/com/elsebaey/ecommerce/product/Product.java; services/product/src/main/java/com/elsebaey/ecommerce/category/Category.java","Product:L1-L27; Category:L1-L24","`Product` holds a `@ManyToOne` reference to `Category`, while `Category` maintains a `@OneToMany` list of `Product`, creating a bidirectional dependency cycle."
Cyclic Dependency,order-service,Yes,"services/order/src/main/java/com/elsebaey/ecommerce/order/Order.java; services/order/src/main/java/com/elsebaey/ecommerce/orderline/OrderLine.java","Order:L1-L33; OrderLine:L1-L20","The order aggregate retains a collection of `OrderLine` entities and each `OrderLine` points back to its parent `Order`, keeping the two packages mutually dependent."
Cyclic Dependency,customer-service,No,"services/customer/src/main/java/com/elsebaey/ecommerce/customer/Customer.java; services/customer/src/main/java/com/elsebaey/ecommerce/customer/Address.java","Customer:L1-L18; Address:L1-L17","Customer embeds an address value object without any reverse reference, so no cyclic dependency arises in the customer module."
Cyclic Dependency,payment-service,No,"services/payment/src/main/java/com/elsebaey/ecommerce/payment/Payment.java; services/payment/src/main/java/com/elsebaey/ecommerce/payment/PaymentNotificationRequest.java","Payment:L1-L27; PaymentNotificationRequest:L1-L13","Payment entities and DTOs do not maintain mutual references—notifications are unidirectional—so a dependency cycle is absent."
Unversioned API,api-gateway,No,"services/config-server/src/main/resources/configurations/gateway-service.yml","gateway-service.yml:L1-L28","Every routed path is namespaced under `/api/v1/...`, so the gateway does not expose unversioned HTTP APIs."
ESB Usage,api-gateway,No,"services/gateway/src/main/java/com/elsebaey/gateway/GatewayApplication.java; services/gateway/src/main/java/com/elsebaey/gateway/security/SecurityConfig.java; services/config-server/src/main/resources/configurations/gateway-service.yml","GatewayApplication:L1-L11; SecurityConfig:L1-L23; gateway-service.yml:L1-L28","The gateway strictly performs HTTP routing with Spring Cloud Gateway and security filters; it does not mediate asynchronous integrations typical of an ESB."
ESB Usage,"order-service, payment-service, notification-service",Yes,"services/order/src/main/java/com/elsebaey/ecommerce/kafka/OrderProducer.java; services/payment/src/main/java/com/elsebaey/ecommerce/notification/NotificationProducer.java; services/notification/src/main/java/com/elsebaey/ecommerce/kafka/NotificationConsumer.java","OrderProducer:L11-L27; NotificationProducer:L16-L25; NotificationConsumer:L24-L64","Order and payment services publish events onto shared Kafka topics that the notification service consumes, effectively routing multiple bounded contexts through a centralized messaging bus."
